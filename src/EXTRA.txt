html
<div *ngIf='showresult'>
  <div *ngFor="let result of results?.Search">
    
    <h1>{{ result?.Title }} ({{result?.Year}})</h1>
    <h5>{{ result?.Rated }} | {{ result?.Runtime }} | {{ result?.Genre }} | {{ result?.Released }}</h5>
    <div  class="media">

      <img class="poster mr-3" src="{{result?.Poster}}"  alt="...">
      <div class="media-body">
        <h5 class="mt-0">Plot</h5>
        <p> {{result?.Plot}}</p>
        <h5 class="mt-0">Director</h5>
        <p> {{result?.Director}}</p>
        <h5 class="mt-0">Writer</h5>
        <p> {{result?.Writer}}</p>
        <h5 class="mt-0">Stars</h5>
        <p> {{result?.Actors}}</p>
        <h5 class="mt-0">Awards</h5>
        <p> {{result?.Awards}}</p>
      </div>
    </div>
    <nominate class="btn-space"></nominate> <my-movies></my-movies>
  </div>
</div>

ts


import { Component, OnInit , OnChanges , SimpleChanges } from '@angular/core';
import {HttpClient} from '@angular/common/http';

@Component({
  // tslint:disable-next-line:component-selector
  selector: 'search',
  templateUrl: './search.component.html',
  styleUrls: ['./search.component.css']
})
// tslint:disable-next-line:component-class-suffix
export class SearchComponent implements OnChanges{
  baseuri = 'http://www.omdbapi.com/?s=';
  induri = 'http://www.omdbapi.com/?t=';
  val = 'x-men';
  indival = '';
  filter = '&movies';
  apikey = '&apikey=98027472';
  results;
  indiresult;
  showresult: boolean;
  constructor(private http: HttpClient) {
    http.get( this.baseuri + this.val + this.filter + this.apikey)
      .subscribe(response => {
        console.log(response);
      });
  }
  // tslint:disable-next-line:typedef
  getSearchVal(val)
  {
    this.val = val;
    console.warn(val);
  }

  // tslint:disable-next-line:typedef
  getResult()
  {
    this.http.get(this.baseuri + this.val + this.filter + this.apikey)
      .subscribe(response => {
        this.results = response;
        console.log(this.results);
        this.showresult = true;
      });

  }

  // tslint:disable-next-line:typedef
  getIndiVal(indival)
  {
    this.indival = indival;
    console.warn(indival);
  }

  // tslint:disable-next-line:typedef
  getIndividual()
  {
    this.http.get(this.induri + this.indival + this.apikey)
      .subscribe(response => {
        this.indiresult = response;
        console.log(this.indiresult);
        this.showresult = true;
      });

  }
  // tslint:disable-next-line:typedef
  ngOnChanges(changes: SimpleChanges) {
    if(changes.indival){
      this.getIndiVal(this.indival);
    }
  }


}
